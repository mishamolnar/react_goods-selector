{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","toggle","good","includes","setState","filter","item","createTitle","goods","length","slice","join","cancelSelected","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,OAAS,SAACC,GACJ,EAAKH,MAAMC,cAAcG,SAASD,GACpC,EAAKE,UAAS,SAAAL,GAAK,MACjB,CAAEC,cAAc,YAAKD,EAAMC,cAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,UAGnE,EAAKE,UAAS,SAAAL,GAAK,MACjB,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAKhDK,YAAc,SAACC,GACb,OACEA,EAAMC,OAAN,UACOD,EAAMC,OAAS,EAAf,UACED,EAAME,MAAM,GAAI,GAAGC,KAAK,MAD1B,gBACuCH,EAAMA,EAAMC,OAAS,GAD5D,2BAEED,EAAM,GAFR,iBAGH,qB,EAIRI,eAAiB,WACf,EAAKR,SAAS,CAAEJ,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,iDACA,mBAAGA,UAAU,iBAAb,SAA+BD,KAAKN,YAAYP,KAChD,qBAAIc,UAAU,YAAd,UACE,wBACEC,KAAK,SACLD,UAAU,aACVE,QAAS,WACP,EAAKJ,kBAJT,mCASCf,EAAgBoB,KAAI,SAAAf,GACnB,OACE,qBAEEY,UAAWI,IACT,YACA,CAAE,gBAAiBlB,EAAcG,SAASD,IAC1C,CAAE,kBAAmBF,EAAcG,SAASD,KALhD,UAQE,6BAAMA,IACN,wBACEY,UAAU,WACVC,KAAK,SACLC,QAAS,WACP,EAAKf,OAAOC,IAJhB,SAOGF,EAAcG,SAASD,GAAQ,IAAM,QAfnCA,gB,GAnDHiB,IAAMC,WA6ETtB,IChGfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c963ee7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Prop = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, Prop> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  toggle = (good: string) => {\n    if (this.state.selectedGoods.includes(good)) {\n      this.setState(state => (\n        { selectedGoods: [...state.selectedGoods.filter(item => item !== good)] }\n      ));\n    } else {\n      this.setState(state => (\n        { selectedGoods: [...state.selectedGoods, good] }\n      ));\n    }\n  };\n\n  createTitle = (goods : string[]) => {\n    return (\n      goods.length\n        ? `${goods.length > 1\n          ? `${goods.slice(0, -1).join(', ')} and ${goods[goods.length - 1]} are selected`\n          : `${goods[0]} is selected`}`\n        : 'No goods selected'\n    );\n  };\n\n  cancelSelected = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Selected goods:</h1>\n        <p className=\"App__data-info\">{this.createTitle(selectedGoods)}</p>\n        <ul className=\"App__list\">\n          <button\n            type=\"button\"\n            className=\"App__clear\"\n            onClick={() => {\n              this.cancelSelected();\n            }}\n          >\n            Cancel Selected Goods\n          </button>\n          {goodsFromServer.map(good => {\n            return (\n              <li\n                key={good}\n                className={classNames(\n                  'App__item',\n                  { 'App__item--on': selectedGoods.includes(good) },\n                  { 'App__item--off': !selectedGoods.includes(good) },\n                )}\n              >\n                <h3>{ good }</h3>\n                <button\n                  className=\"App__btn\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.toggle(good);\n                  }}\n                >\n                  {selectedGoods.includes(good) ? '-' : '+'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}